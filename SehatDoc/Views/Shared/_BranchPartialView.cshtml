@using SehatDoc.Enums;
@using SehatDoc.ViewModels;
@model SehatDoc.ViewModels.BranchViewModel
@{
    
    var branchViewModel = ViewData["BranchViewModel"] as BranchViewModel;
}


<!-- Your form for creating branches -->
<form id="createBranchForm" asp-action="AddBranch" asp-controller="Branch" method="post">
    <!-- Form fields for CreateBranchViewModel properties -->
    <input asp-for="HospitalID" type="hidden" />
    <div class="row">
        <div class="form-group col-md-6 col-12">
            <label asp-for="BranchName" name="BranchName">Name</label>
            <input asp-for="BranchName" name="BranchName" class="form-control" />
        <span asp-validation-for="BranchName" class="text-danger"></span>
    </div>
        <div class="form-group col-md-6 col-12">
        <label asp-for="DepartmentIDs">Select Department</label>
        <select asp-for="DepartmentIDs" class="form-control" asp-items="ViewBag.Departments" id="departmentDropdowns">
            <option disabled>Select Department</option>
        </select>
        <span asp-validation-for="DepartmentIDs" class="text-danger"></span>
    </div>
    </div>
    
    <div class="form-group">
        <label asp-for="Location">Location</label>
        <input asp-for="Location" class="form-control" id="HospitalLocation" />
        <span asp-validation-for="Location" class="text-danger"></span>
    </div>
    <div class="row">
    <div class="form-group col-md-6 col-12">
        <label asp-for="Contact1">Contact 1</label>
        <input asp-for="Contact1" class="form-control" />
        <span asp-validation-for="Contact1" class="text-danger"></span>
    </div>
    <div class="form-group col-md-6 col-12">
            <label asp-for="Contact2">Contact 2</label>
            <input asp-for="Contact2" class="form-control" />
        <span asp-validation-for="Contact2" class="text-danger"></span>
    </div>
    </div>
   

        <div class="row">
            <div class="form-group col-md-6 col-12">
                <label>State:</label>
                <select id="stateDropdown" asp-for="StateId" asp-items="@ViewBag.States" class="form-control">
                    <option value="">Select State</option>
                </select>
                <span asp-validation-for="StateId" class="text-danger"></span>
            </div>

            <!-- City dropdown -->
            <div class="form-group col-md-6 col-12">
                <label>City:</label>
                <select id="cityDropdown" asp-for="CityId" name="CityId" class="form-control">
                    <option value="">Select City</option>
                </select>
                <span asp-validation-for="CityId" class="text-danger"></span>
            </div>
        </div>
   

    <button type="submit" class="btn btn-primary">Save Branch</button>
</form>
<!-- Bootstrap modal for the map -->
<div class="modal fade" id="mapModal" tabindex="-1" role="dialog" aria-labelledby="mapModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mapModalLabel">Select Location on Map</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Map container with explicit size -->
                <div id="map" style="width: 100%; height: 400px;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveLocation()">Save Location</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <!-- jQuery library -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        console.log('Script in partial view is executed!');
        // Your partial view script
    </script>
}

    <script>
    $(function () {
        $("#departmentDropdowns").chosen({
            width: '100%' // Set the desired width here, for example, '100%'.
        });
    });
     
    </script>
  
    <script>
        $(document).ready(function () {
            $('#yourBranchFormId').submit(function (event) {
                event.preventDefault(); // Prevent the default form submission

                // Retrieve the hospitalId dynamically from an HTML element (replace with your actual scenario)
                var hospitalId = $('#yourHospitalIdElement').val();

                // Create a JavaScript object representing your branchViewModel
                var branchViewModel = {
                    hospitalId: hospitalId,
                    branchName:branchName
                    // ... other properties
                };

                // Make an AJAX request to submit the form data
                $.ajax({
                    url: '/Branch/AddBranch',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8', // Specify the content type
                    dataType: 'json', // Specify the expected data type
                    data: JSON.stringify(branchViewModel),
                    success: function (data) {
                        // Handle success, e.g., close modal, refresh page, etc.
                        console.log("Success:", data);
                    },
                    error: function (error) {
                        // Handle error
                        console.error("Error:", error);
                    }
                });

            });
        });
    </script>


    <script>
        var map, marker;
        function handleLocationInput(event) {
            if (event.key === 'Enter') {
                var location = document.getElementById('HospitalLocation').value;
                fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + encodeURIComponent(location))
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            var latlng = [parseFloat(data[0].lat), parseFloat(data[0].lon)];
                            updateMarker(latlng);
                            openMapModal(); // Ensure the map modal is opened
                        } else {
                            alert('Location not found. Please enter a valid location.');
                        }
                    })
                    .catch(error => console.error('Error:', error));
                event.preventDefault();
            }
        }

        function initializeMap() {
            map = L.map('map').setView([30.3753, 69.3451], 6);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
            }).addTo(map);

            var searchControl = L.Control.geocoder({
                defaultMarkGeocode: false,
            }).on('markgeocode', function (event) {
                var latlng = event.geocode.center;
                updateMarker(latlng);
                if (marker) {
                    map.setView(latlng, 13); // Explicitly set the view with a specific zoom level
                }
            }).addTo(map);

            map.on('click', function (e) {
                updateMarker(e.latlng);
            });
        }


        function updateMarker(latlng) {
            if (!map) {
                initializeMap();
            }
            if (marker) {
                marker.setLatLng(latlng);
            } else {
                map.setView(latlng, 13);
                marker = L.marker(latlng).addTo(map);
            }
        }

        function openMapModal() {
            if (!marker) {
                var defaultLatLng = [30.3753, 69.3451]; // Set default coordinates if marker doesn't exist
                updateMarker(defaultLatLng);
                map.setView(defaultLatLng, 6); // Set the view to default coordinates with a specific zoom level
            }
            $('#mapModal').modal('show');
        }


        function adjustMapSize() {
            if (map) {
                map.invalidateSize();
                map.setSize([$('#map').width(), $('#map').height()]);
            }
        }

        $('#HospitalLocation').on('dblclick', function () {
            openMapModal();
        });

        $('#saveLocationBtn').on('click', function () {
            saveLocation();
        });

        $('#mapModal').on('shown.bs.modal', function () {
            if (!map) {
                initializeMap();
            }
            adjustMapSize();
            if (marker) {
                map.setView(marker.getLatLng(), 13);
            }
        });

        $('#mapModal').on('hidden.bs.modal', function () {
            if (map) {
                map.remove();
                map = null;
                marker = null;
            }
        });

        function saveLocation() {
            if (marker) {
                var latlng = marker.getLatLng();
                var lat = latlng.lat;
                var lng = latlng.lng;
                fetch('https://nominatim.openstreetmap.org/reverse?format=json&lat=' + lat + '&lon=' + lng)
                    .then(response => response.json())
                    .then(data => {
                        console.log('Location:', data.display_name);
                        document.getElementById('HospitalLocation').value = data.display_name;
                        $('#mapModal').modal('hide');
                    })
                    .catch(error => console.error('Error:', error));
            }
        }

    </script>
    <script>
        $(document).ready(function () {
            $("#stateDropdown").change(function () {
                var selectedStateId = $(this).val();
                if (selectedStateId !== "") {
                    $.ajax({
                        url: '/State/GetCitiesByState',
                        type: 'GET',
                        data: { stateId: selectedStateId },
                        success: function (data) {
                            console.log(data)
                            $("#cityDropdown").empty();
                            $("#cityDropdown").append('<option value="">Select City</option>');
                            $.each(data, function (index, city) {
                                $("#cityDropdown").append('<option value="' + city.id + '">' + city.cityName + '</option>');
                            });
                        }
                    });
                } else {
                    $("#cityDropdown").empty();
                    $("#cityDropdown").append('<option value="">Select City</option>');
                }
            });

            $("#submitButton").click(function () {
                if ($("#cityDropdown").val() === "") {
                    $("#cityDropdown").next(".text-danger").text("Please select a city.");
                    return false; // Prevent form submission
                }
                return true; // Allow form submission
            });
        });
    </script>
 
