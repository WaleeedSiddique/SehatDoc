@using SehatDoc.Enums;
@using SehatDoc.HospitalProfileDTO_s;
@model HospitalProfileDTO
@{
    ViewBag.Message = "Hospital Profile";
    Layout = "_AdminDashboard";
}
<div class="container">
    <div class="row">
        <div class="col-6 offset-3" style="margin-top:50px;">
            <div class="card">
                <div class="=card-header">
                    <h4 class="text-center my-3">Edit Hospital Profile</h4>
                </div>
                <form asp-controller="HospitalProfile" asp-action="Edit" method="post" enctype="multipart/form-data">
                    <div class="card-body">
                        <div class="form-group">
                            <label asp-for="HospitalName">Name</label>
                            <input asp-for="HospitalName" class="form-control" />
                            <span asp-validation-for="HospitalName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="HospitalLocation">Location</label>
                            <input asp-for="HospitalLocation" class="form-control" onkeydown="handleLocationInput(event)" />
                            <span asp-validation-for="HospitalLocation" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="DepartmentIDs">Select Department</label>
                            <select asp-for="DepartmentIDs" class="form-control" asp-items="ViewBag.Departments" id="departmentDropdown">
                                <option disabled>Select Department</option>
                            </select>
                            <span asp-validation-for="DepartmentIDs" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="HospitalNumber">Contact 1</label>
                            <input asp-for="HospitalNumber" class="form-control" />
                            <span asp-validation-for="HospitalNumber" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="HospitalNumber2">Contact 2</label>
                            <input asp-for="HospitalNumber2" class="form-control" />
                            <span asp-validation-for="HospitalNumber2" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label>State:</label>
                            <select id="stateDropdown" asp-for="StateId" asp-items="@ViewBag.States" class="form-control">
                                <option value="">Select State</option>
                            </select>
                            <span asp-validation-for="StateId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label>City:</label>
                            <select id="cityDropdown" asp-for="CityId" name="CityId" asp-items="ViewBag.cities" class="form-control">
                                <option value="">Select City</option>
                            </select>
                            <span asp-validation-for="CityId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="HospitalLogo">Logo</label>
                            <input asp-for="HospitalLogo" class="form-control" />
                            <span asp-validation-for="HospitalLogo" class="text-danger"></span>
                        </div>
                        <div class="card-footer text-right">
                            <a class="btn btn-danger" asp-controller="HospitalProfile" asp-action="Index">Cancel</a>
                            <button class="btn btn-primary">Submit</button>
                        </div>

                    </div>
                </form>
                <!-- Bootstrap modal for the map -->
                <div class="modal fade" id="mapModal" tabindex="-1" role="dialog" aria-labelledby="mapModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="mapModalLabel">Select Location on Map</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <!-- Map container with explicit size -->
                                <div id="map" style="width: 100%; height: 400px;"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" onclick="saveLocation()">Save Location</button>
                            </div>
                        </div>
                    </div>
                </div>
               
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(function () {
            $("#departmentDropdown").chosen();
        });
    </script>
    <script>
        $(function () {
            $("#doctorDropdown").chosen();
        });
    </script>

    <script>
        var map, marker;

        function handleLocationInput(event) {
            if (event.key === 'Enter') {
                var location = document.getElementById('HospitalLocation').value;
                fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + encodeURIComponent(location))
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            var latlng = [parseFloat(data[0].lat), parseFloat(data[0].lon)];
                            openMapModal();
                            createMap(latlng);
                        } else {
                            alert('Location not found. Please enter a valid location.');
                        }
                    })
                    .catch(error => console.error('Error:', error));
                event.preventDefault();
            }
        }

        function createMap(latlng) {
            if (!map) {
                map = L.map('map').setView(latlng, 13);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                }).addTo(map);

                var searchControl = L.Control.geocoder({
                    defaultMarkGeocode: false,
                }).on('markgeocode', function (event) {
                    var latlng = event.geocode.center;
                    updateMarker(latlng);
                    map.setView(latlng, 13);
                }).addTo(map);

                map.on('dblclick', function (e) {
                    var latlng = e.latlng;
                    openMapModal();
                    updateMarker(latlng);
                });
            } else {
                map.setView(latlng, 13);
                updateMarker(latlng);
            }
        }

        function updateMarker(latlng) {
            if (!marker) {
                marker = L.marker(latlng).addTo(map);
            } else {
                marker.setLatLng(latlng);
            }
        }

        function openMapModal() {
            $('#mapModal').modal('show');
        }

        $('#mapModal').on('shown.bs.modal', function () {
            if (!map) {
                createMap([30.3753, 69.3451]);
            }
            adjustMapSize();
            if (marker) {
                map.setView(marker.getLatLng(), 13);
            }
        });

        $('#HospitalLocation').on('dblclick', function () {
            var location = document.getElementById('HospitalLocation').value;
            fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + encodeURIComponent(location))
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        var latlng = [parseFloat(data[0].lat), parseFloat(data[0].lon)];
                        openMapModal();
                        createMap(latlng);
                    } else {
                        alert('Location not found. Please enter a valid location.');
                    }
                })
                .catch(error => console.error('Error:', error));
        });

        $('#saveLocationBtn').on('click', function () {
            saveLocation();
        });

        $('#mapModal').on('hidden.bs.modal', function () {
            if (map) {
                map.remove();
                map = null;
                marker = null;
            }
        });

        function adjustMapSize() {
            if (map) {
                map.invalidateSize();
            }
        }

        function saveLocation() {
            if (marker) {
                var latlng = marker.getLatLng();
                var lat = latlng.lat;
                var lng = latlng.lng;
                fetch('https://nominatim.openstreetmap.org/reverse?format=json&lat=' + lat + '&lon=' + lng)
                    .then(response => response.json())
                    .then(data => {
                        console.log('Location:', data.display_name);
                        document.getElementById('HospitalLocation').value = data.display_name;
                        $('#mapModal').modal('hide');
                    })
                    .catch(error => console.error('Error:', error));
            }
        }
    </script>
 
    <script>
        $(document).ready(function () {
            $("#stateDropdown").change(function () {
                var selectedStateId = $(this).val();
                if (selectedStateId !== "") {
                    $.ajax({
                        url: '/State/GetCitiesByState',
                        type: 'GET',
                        data: { stateId: selectedStateId },
                        success: function (data) {
                            console.log(data)
                            $("#cityDropdown").empty();
                            $("#cityDropdown").append('<option value="">Select City</option>');
                            $.each(data, function (index, city) {
                                $("#cityDropdown").append('<option value="' + city.id + '">' + city.cityName + '</option>');
                            });
                        }
                    });
                } else {
                    $("#cityDropdown").empty();
                    $("#cityDropdown").append('<option value="">Select City</option>');
                }
            });

            $("#submitButton").click(function () {
                if ($("#cityDropdown").val() === "") {
                    $("#cityDropdown").next(".text-danger").text("Please select a city.");
                    return false; // Prevent form submission
                }
                return true; // Allow form submission
            });
        });
    </script>
}
